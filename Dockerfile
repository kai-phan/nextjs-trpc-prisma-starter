# Install dependencies only when needed
FROM node:16-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN \
	if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
	elif [ -f package-lock.json ]; then npm ci; \
	elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \
	else echo "Lockfile not found." && exit 1; \
	fi


# Rebuild the source code only when needed
FROM node:16-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Environment variables must be present at build time
## Docker
ARG PROJECT_NAME
ENV PROJECT_NAME=${PROJECT_NAME}
ARG DOCKER_HOST
ENV DOCKER_HOST=${DOCKER_HOST}
ARG DOCKER_TLS_VERIFY
ENV DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY}
ARG DOCKER_CERT_PATH
ENV DOCKER_CERT_PATH=${DOCKER_CERT_PATH}
## SSH
ARG SSH_HOST
ENV SSH_HOST=${SSH_HOST}
ARG SSH_USER
ENV SSH_USER=${SSH_USER}
## Node
ARG NODE_ENV
ENV NODE_ENV=${NODE_ENV}
ARG APP_ENV
ENV APP_ENV=${APP_ENV}
## Next.js
ARG NEXT_PUBLIC_LOGS_ENABLED
ENV NEXT_PUBLIC_LOGS_ENABLED=${NEXT_PUBLIC_LOGS_ENABLED}
ARG NEXT_TELEMETRY_DISABLED
ENV NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}
## Postgres
ARG POSTGRES_USER
ENV POSTGRES_USER=${POSTGRES_USER}
ARG POSTGRES_PORT
ENV POSTGRES_PORT=${POSTGRES_PORT}
ARG POSTGRES_HOST
ENV POSTGRES_HOST=${POSTGRES_HOST}
ARG POSTGRES_DB
ENV POSTGRES_DB=${POSTGRES_DB}
ARG POSTGRES_PASSWORD
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}
## Postgres backups
ARG POSTGRES_EXTRA_OPTS
ENV POSTGRES_EXTRA_OPTS=${POSTGRES_EXTRA_OPTS}
ARG SCHEDULE
ENV SCHEDULE=${SCHEDULE}
ARG BACKUP_KEEP_DAYS
ENV BACKUP_KEEP_DAYS=${BACKUP_KEEP_DAYS}
ARG BACKUP_KEEP_WEEKS
ENV BACKUP_KEEP_WEEKS=${BACKUP_KEEP_WEEKS}
ARG BACKUP_KEEP_MONTHS
ENV BACKUP_KEEP_MONTHS=${BACKUP_KEEP_MONTHS}
ARG HEALTHCHECK_PORT
ENV HEALTHCHECK_PORT=${HEALTHCHECK_PORT}
## Redis
ARG REDIS_HOST
ENV REDIS_HOST=${REDIS_HOST}
ARG REDIS_PORT
ENV REDIS_PORT=${REDIS_PORT}
ARG REDIS_PASSWORD
ENV REDIS_PASSWORD=${REDIS_PASSWORD}
## Next Auth
ARG NEXTAUTH_URL
ENV NEXTAUTH_URL=${NEXTAUTH_URL}
ARG NEXTAUTH_SECRET
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
## Google
ARG GOOGLE_ID
ENV GOOGLE_ID=${GOOGLE_ID}
ARG GOOGLE_SECRET
ENV GOOGLE_SECRET=${GOOGLE_SECRET}
## Github
ARG GITHUB_KEY
ENV GITHUB_KEY=${GITHUB_KEY}
ARG GITHUB_CLIENT_ID
ENV GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
ARG GITHUB_SECRET
ENV GITHUB_SECRET=${GITHUB_SECRET}
ARG NEXT_PUBLIC_GITHUB_TOKEN
ENV NEXT_PUBLIC_GITHUB_TOKEN=${NEXT_PUBLIC_GITHUB_TOKEN}
## Email
ARG EMAIL_SERVER
ENV EMAIL_SERVER=${EMAIL_SERVER}
ARG EMAIL_FROM
ENV EMAIL_FROM=${EMAIL_FROM}
## Etherscan
ARG ETHERSCAN_API_KEY
ENV ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}
## Internal API
ARG INTERNAL_API_KEY
ENV INTERNAL_API_KEY=${INTERNAL_API_KEY}
## Worker
ARG WORKER_PORT
ENV WORKER_PORT=${WORKER_PORT}
## App
ARG APP_PORT
ENV APP_PORT=${APP_PORT}

ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
ENV NEXT_TELEMETRY_DISABLED 1

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NEXT_TELEMETRY_DISABLED 1

RUN yarn build

# If using npm comment out above and use below instead
# RUN npm run build

# Production image, copy all the files and run next
FROM node:16-alpine AS runner
WORKDIR /app



# Environment variables must be redefined at run time

## Docker
ARG PROJECT_NAME
ENV PROJECT_NAME=${PROJECT_NAME}
ARG DOCKER_HOST
ENV DOCKER_HOST=${DOCKER_HOST}
ARG DOCKER_TLS_VERIFY
ENV DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY}
ARG DOCKER_CERT_PATH
ENV DOCKER_CERT_PATH=${DOCKER_CERT_PATH}
## SSH
ARG SSH_HOST
ENV SSH_HOST=${SSH_HOST}
ARG SSH_USER
ENV SSH_USER=${SSH_USER}
## Node
ARG NODE_ENV
ENV NODE_ENV=${NODE_ENV}
ARG APP_ENV
ENV APP_ENV=${APP_ENV}
## Next.js
ARG NEXT_PUBLIC_LOGS_ENABLED
ENV NEXT_PUBLIC_LOGS_ENABLED=${NEXT_PUBLIC_LOGS_ENABLED}
ARG NEXT_TELEMETRY_DISABLED
ENV NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}
## Postgres
ARG POSTGRES_USER
ENV POSTGRES_USER=${POSTGRES_USER}
ARG POSTGRES_PORT
ENV POSTGRES_PORT=${POSTGRES_PORT}
ARG POSTGRES_HOST
ENV POSTGRES_HOST=${POSTGRES_HOST}
ARG POSTGRES_DB
ENV POSTGRES_DB=${POSTGRES_DB}
ARG POSTGRES_PASSWORD
ENV POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
ARG DATABASE_URL
ENV DATABASE_URL=${DATABASE_URL}
## Postgres backups
ARG POSTGRES_EXTRA_OPTS
ENV POSTGRES_EXTRA_OPTS=${POSTGRES_EXTRA_OPTS}
ARG SCHEDULE
ENV SCHEDULE=${SCHEDULE}
ARG BACKUP_KEEP_DAYS
ENV BACKUP_KEEP_DAYS=${BACKUP_KEEP_DAYS}
ARG BACKUP_KEEP_WEEKS
ENV BACKUP_KEEP_WEEKS=${BACKUP_KEEP_WEEKS}
ARG BACKUP_KEEP_MONTHS
ENV BACKUP_KEEP_MONTHS=${BACKUP_KEEP_MONTHS}
ARG HEALTHCHECK_PORT
ENV HEALTHCHECK_PORT=${HEALTHCHECK_PORT}
## Redis
ARG REDIS_HOST
ENV REDIS_HOST=${REDIS_HOST}
ARG REDIS_PORT
ENV REDIS_PORT=${REDIS_PORT}
ARG REDIS_PASSWORD
ENV REDIS_PASSWORD=${REDIS_PASSWORD}
## Next Auth
ARG NEXTAUTH_URL
ENV NEXTAUTH_URL=${NEXTAUTH_URL}
ARG NEXTAUTH_SECRET
ENV NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
## Google
ARG GOOGLE_ID
ENV GOOGLE_ID=${GOOGLE_ID}
ARG GOOGLE_SECRET
ENV GOOGLE_SECRET=${GOOGLE_SECRET}
## Github
ARG GITHUB_KEY
ENV GITHUB_KEY=${GITHUB_KEY}
ARG GITHUB_CLIENT_ID
ENV GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
ARG GITHUB_SECRET
ENV GITHUB_SECRET=${GITHUB_SECRET}
ARG NEXT_PUBLIC_GITHUB_TOKEN
ENV NEXT_PUBLIC_GITHUB_TOKEN=${NEXT_PUBLIC_GITHUB_TOKEN}
## Email
ARG EMAIL_SERVER
ENV EMAIL_SERVER=${EMAIL_SERVER}
ARG EMAIL_FROM
ENV EMAIL_FROM=${EMAIL_FROM}
## Etherscan
ARG ETHERSCAN_API_KEY
ENV ETHERSCAN_API_KEY=${ETHERSCAN_API_KEY}
## Internal API
ARG INTERNAL_API_KEY
ENV INTERNAL_API_KEY=${INTERNAL_API_KEY}
## Worker
ARG WORKER_PORT
ENV WORKER_PORT=${WORKER_PORT}
## App
ARG APP_PORT
ENV APP_PORT=${APP_PORT}

ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
ENV NEXT_TELEMETRY_DISABLED 1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["node", "server.js"]
